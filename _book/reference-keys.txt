intro
folder
organizing-files
create-projects
naming-files
folders-based-on-file-type
creating-sub-folders
conclusion
code
create-sections
order-of-code
indentation
conclusion-1
func
metadata-or-information-header
pass-everything-through-parameters
use-return-statement
keep-a-consistency-in-return-type
use-sensible-names-for-parameters-too
use-trycatch
write-simple-and-unique-functions
use-packagefunction-approach
you-should-load-libraries-in-the-order-of-their-usage
conclusion-2
names
popular-naming-conventions
camelcase
pascalcase
snake_case
informative-names
conclusions
envManagement
renv-for-package-management
config-for-external-dependencies
conclusion-3
dataManagement
keep-a-copy-or-your-data
dont-use-numbers-for-columns
keep-meaningful-and-proper-column-names
use-databases
use-efficient-packages
data.table
matrix
disk.frame
modeldb
dbplot
sparklyr
conclusion-4
types
things-you-should-know
r-dont-have-scalar-data-types
dates-are-basically-integers-under-the-hood.
posixlt-are-basically-lists-under-the-hood
integers-are-smaller-than-numeric
define-your-datatypes-before-the-variable
lists-are-better-than-dataframe-under-a-loop
use-lists-whenever-possible
choose-data-types-carefully
dont-change-datatypes
future-of-type-system-in-r
conclusion-5
reference
understanding-the-system
pass-by-value
pass-by-reference
copy-on-modify
for-pass-by-reference
conclusion-6
loops
multithreading
Vectorize
bench
packages
syntax
proxy
cloud
shinyspeed
shinymemory
